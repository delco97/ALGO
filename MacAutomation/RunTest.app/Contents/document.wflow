<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.7</string>
	<key>AMApplicationVersion</key>
	<string>2.8</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run JavaScript.action</string>
				<key>ActionName</key>
				<string>Esegui JavaScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>var app = Application.currentApplication();app.includeStandardAdditions = true;var executableFilevar inputFilesvar outputFilesvar inputFilesContent = []var outputFilesContent = []var responsevar good = 0var bad = 0;var finalReport = ""var listNotPassed = [];//Get executableexecutableFile = app.chooseFile({    withPrompt : "Choose program to test",
	multipleSelectionsAllowed: true,});//Get input filesinputFiles = app.chooseFile({    withPrompt : "Choose input files",    multipleSelectionsAllowed: true,});//Get output filesdo{  outputFiles = app.chooseFile({      withPrompt : "Choose output files (as many as input files: "+ inputFiles.length +")",      multipleSelectionsAllowed: true,    });  if(outputFiles.length!=inputFiles.length){    response = app.displayDialog("Output files need to be as many as input files: " + inputFiles.length + " files", {        withTitle : "Warning",        withIcon: "caution",        buttons: ["Ok","Exit"],        defaultButton: "Ok"    });  }}while(outputFiles.length!=inputFiles.length &amp;&amp; response.buttonReturned == "Ok");if(outputFiles.length == inputFiles.length){  for(var i=0;i&lt;inputFiles.length;i++){    inputFilesContent.push(app.read(inputFiles[i].toString()));    outputFilesContent.push(app.read(outputFiles[i].toString()));    //Excute selected program passing ith file as input    app.displayDialog(executableFile.toString() + " &lt; " + inputFiles[i].toString());    var expectedOut = app.doShellScript(executableFile.toString() + " &lt; " + inputFiles[i].toString());    if(expectedOut == outputFilesContent[i])good++;    else{      bad++;      listNotPassed.push(inputFiles[i].toString());    }  }  finalReport = "Test case passed: " + good + "/" + inputFiles.length + "\n";  finalReport += "Test case not passed: "+ bad + "/" + inputFiles.length + "\n";  finalReport += "Failed tests: \n" + listNotPassed.toString();  app.displayDialog(finalReport);}</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunJavaScript</string>
				<key>CFBundleVersion</key>
				<string>1.0</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunJavaScriptAction</string>
				<key>InputUUID</key>
				<string>0BD6E981-B9F5-41B7-AE8A-A63BAE5AB358</string>
				<key>Keywords</key>
				<array>
					<string>Esegui</string>
					<string>JavaScript</string>
				</array>
				<key>OutputUUID</key>
				<string>55A2FAE7-00BC-4449-BAA8-6BD58490A8D4</string>
				<key>UUID</key>
				<string>D9674E0F-D6C4-4E77-8795-2E0742353D1D</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>function run(input, parameters) {
	
	// Your script goes here

	return input;
}</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>494.000000:316.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run JavaScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.application</string>
	</dict>
</dict>
</plist>
